#Id: screen-keys.conf,v 1.6 2010/02/02 21:34:16 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# On Mac OS X 1.9.x, pbcopy and pbpaste command don't work well under tmux.
# Use the reattach-to-user-namespace wrapper to resolve this issue.
# See https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
#set-option -g default-command "reattach-to-user-namespace -l zsh"

# Set the prefix to ^Q.
unbind C-b
set -g prefix C-q
bind-key C-q send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind-key ^X lock-session
unbind x
bind-key x lock-session

# screen ^C c
unbind ^C
bind-key ^C new-window
bind-key c new-window

# detach ^D d
unbind ^D
bind-key ^D detach-client

# next ^@ ^N sp n
unbind ^N
bind-key ^N next-window
unbind n
bind-key n next-window

# title A
unbind A
bind-key A command-prompt -p "Rename window:" "rename-window '%%'"

# other ^A
unbind ^A
bind-key ^A last-window

# prev ^H ^P p ^?
unbind ^P
bind-key ^P previous-window
unbind p
bind-key p previous-window

# quit \
unbind \
bind-key \ confirm-before -p "kill tmux server?" kill-server

# kill K k
unbind K
bind-key K confirm-before -p "kill window?" kill-window
unbind k
bind-key k confirm-before -p "kill window?" kill-window

# redisplay ^L l
unbind ^L
bind-key ^L refresh-client

# split window
unbind |
bind-key | split-window -h \; select-layout even-horizontal
unbind -
bind-key - split-window -v \; select-layout even-vertical

bind-key h select-layout even-horizontal
bind-key v select-layout even-vertical

## Statusbar
set-option -g status-left  "#[bg=colour138]#[fg=colour234] #S:#I.#P "

set -g status-position bottom
set -g status-justify left
set -g status-bg colour234

setw -g window-status-current-format "#[bg=colour238]#[fg=colour119] #I#[fg=colour249]:#[fg=colour255]#W* "
setw -g window-status-format "#[fg=colour250] #I:#[fg=colour250]#W "

# Mode key (emacs/vi)
set-window-option -g mode-keys emacs

# Rotate window
unbind C-w
unbind w
bind-key C-w swap-pane -U
bind-key w swap-pane -U

# select pane
unbind C-o
unbind o
bind-key C-o select-pane -t :.+
bind-key o select-pane -t :.+

# select window
unbind 0
unbind 1
unbind 2
unbind 3
unbind 4
unbind 5
unbind 6
unbind 7
unbind 8
unbind 9
bind-key 0 select-window -t 0
bind-key 1 select-window -t 1
bind-key 2 select-window -t 2
bind-key 3 select-window -t 3
bind-key 4 select-window -t 4
bind-key 5 select-window -t 5
bind-key 6 select-window -t 6
bind-key 7 select-window -t 7
bind-key 8 select-window -t 8
bind-key 9 select-window -t 9

bind-key ) select-pane -t 0
bind-key ! select-pane -t 1
bind-key @ select-pane -t 2
bind-key '#' select-pane -t 3
bind-key $ select-pane -t 4
bind-key % select-pane -t 5
bind-key '^' select-pane -t 6
bind-key & select-pane -t 7
bind-key * select-pane -t 8
bind-key ( select-pane -t 9

# next layout
bind-key g next-layout

# history
set-option -g history-limit 100000

